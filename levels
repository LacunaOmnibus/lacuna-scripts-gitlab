#!/usr/bin/env perl
use 5.010; use strict; use warnings;
$|=1;

require 'l.pl';   # Pull in custom routines

my %l;
my @t = (         # Buildings I want level info on
    'Algae Pond',
    'Beeldeban Nest',
    'Denton Brambles',
    'Entertainment District',
    'Geo Thermal Vent',
    'Interdimensional Rift',
    'Malcud Field',
    'Natural Spring',
    'Ravine',
    'Volcano',
    'Citadel of Knope',
    "Gratch's Gauntlet",
    'Oracle of Anid',
);

sub doit {
    my $client = shift;
    my $planet = shift;
    my $pid = shift;

    my $pname = $planet->{status}{body}{name};
    my $total = 0;

    say "=== $pname ===";
	
    for my $t (@t) {
        for my $k (keys %{$planet->{buildings}}) {
            if ( $planet->{buildings}{$k}{name} eq $t ) {
                printf "%2d %-s\n", $planet->{buildings}{$k}{level}+1, 
                    $t;
                $total += $planet->{buildings}{$k}{level}+1;
            }
        }
    }
    printf "%2d TOTAL\n\n", $total;
}

for_each_planet_get_buildings(\&doit);


=head1 Name

levels - Show levels of certain buildings on each planet

=head1 Usage

./levels

=head1 Description

This script contains a list of interesting buildings in @t.  Edit that list
to include the buildings you want to scan.  It will tell you the I<next> level
for each building on the list, so you can look for upgrade plans for that level.

=head1 Requirements

Uses custom routines in l.pl, which should be found where this script was.

=head1 See Also

https://github.com/aaron-baugher/lacuna-scripts

=head1 Author

Aaron Baugher - aaron.baugher.biz

=cut

